
* check image sizes after optimizing
* check build context sizes after optimizing

arg is Maven-specific

Running image build with non-default Dockerfile
===============================================
docker build -t md/spring-boot-docker -f Dockerfile2 .

Running image
=============
docker run -p 8080:8080 md/spring-boot-docker


image is JDK, check with JRE
	JRE is 20 MB smaller
what is smallest base image with Java?

* check build times
* check startup times


Spring Boot-specific layers
===========================

* requires manual unpacking
mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)

Exploding JAR may result in different classpath order


Spring Boot profile
===================

docker run -e "SPRING_PROFILES_ACTIVE=prod" -p 8080:8080 -t springio/gs-spring-boot-docker

Debugging
=========

docker run -e "JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n" -p 8080:8080 -p 5005:5005 -t springio/gs-spring-boot-docker

IntelliJ -> Run -> Edit Configurations -> Template -> Remote JVM Debug -> Create Configuration

