apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres-on-k8s
    variant: empty-dir-volume
  name: postgres-on-k8s-ed
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-on-k8s
      variant: empty-dir-volume
  strategy: {}
  template:
    metadata:
      labels:
        app: postgres-on-k8s
        variant: empty-dir-volume
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          value: minikube
        image: postgres:latest
        name: postgres
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
      volumes:
      - emptyDir: {}
        name: postgres-data
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: postgres-on-k8s
    variant: empty-dir-volume
  name: postgres-on-k8s-ed
spec:
  ports:
  - name: "5432"
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgres-on-k8s
    variant: empty-dir-volume
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    variant: empty-dir-volume
  name: postgres-on-k8s-job-to-set-up-db-ed
spec:
  template:
    metadata:
      labels:
        variant: empty-dir-volume
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |-
          PGPASSWORD="$PASSWORD" createuser --echo -U postgres -h "${DB_SERVICE_URL}" -p "${DB_SERVICE_PORT}" db_user
          PGPASSWORD="$PASSWORD" psql              -U postgres -h "${DB_SERVICE_URL}" -p "${DB_SERVICE_PORT}" -c "
            ALTER USER \"db_user\" WITH PASSWORD 'db_user'
          "
          PGPASSWORD="$PASSWORD" createdb   --echo -U postgres -h "${DB_SERVICE_URL}" -p "${DB_SERVICE_PORT}" --owner=db_user my_db
          PGPASSWORD=db_user     psql              -U db_user  -h "${DB_SERVICE_URL}" -p "${DB_SERVICE_PORT}" -d my_db -c "
            CREATE TABLE some_table (
              id            SERIAL PRIMARY KEY,
              description   TEXT
            )
          "
        env:
        - name: DB_SERVICE_URL
          value: postgres-on-k8s-ed
        - name: DB_SERVICE_PORT
          value: "5432"
        - name: PASSWORD
          value: minikube
        image: postgres:latest
        name: postgres-on-k8s-job-to-set-up-db
        resources: {}
      restartPolicy: Never
status: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    variant: empty-dir-volume
  name: postgres-on-k8s-job-to-tear-down-db-ed
spec:
  template:
    metadata:
      labels:
        variant: empty-dir-volume
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |-
          PGPASSWORD="$PASSWORD" dropdb   --echo -U postgres -h "${DB_SERVICE_URL}" -p "${DB_SERVICE_PORT}" my_db
          PGPASSWORD="$PASSWORD" dropuser --echo -U postgres -h "${DB_SERVICE_URL}" -p "${DB_SERVICE_PORT}" db_user
        env:
        - name: DB_SERVICE_URL
          value: postgres-on-k8s-ed
        - name: DB_SERVICE_PORT
          value: "5432"
        - name: PASSWORD
          value: minikube
        image: postgres:latest
        name: postgres-on-k8s-job-to-tear-down-db
        resources: {}
      restartPolicy: Never
status: {}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    variant: empty-dir-volume
  name: postgres-on-k8s-cronjob-insert-db-ed
spec:
  jobTemplate:
    metadata:
      labels:
        variant: empty-dir-volume
      name: postgres-on-k8s-cronjob-insert-db
    spec:
      template:
        metadata:
          labels:
            variant: empty-dir-volume
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - |-
              for _ in {1..60}
              do
                PGPASSWORD=db_user  psql -U db_user -h "${DB_SERVICE_URL}" -p "${DB_SERVICE_PORT}" -d my_db -c "
                  INSERT INTO some_table (description) VALUES (md5(random()::text))
                "
                sleep 1
              done
            env:
            - name: DB_SERVICE_URL
              value: postgres-on-k8s-ed
            - name: DB_SERVICE_PORT
              value: "5432"
            - name: PASSWORD
              value: minikube
            image: postgres:latest
            name: postgres-on-k8s-cronjob-insert-db
            resources: {}
          restartPolicy: OnFailure
  schedule: '* * * * *'
status: {}
