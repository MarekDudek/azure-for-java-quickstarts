apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres-on-k8s
    variant: disposable-database
  name: postgres-on-k8s-dd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-on-k8s
      variant: disposable-database
  strategy: {}
  template:
    metadata:
      labels:
        app: postgres-on-k8s
        variant: disposable-database
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-db-admin-credentials
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-db-admin-credentials
        image: postgres:latest
        name: postgres
        ports:
        - containerPort: 5432
        resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: postgres-on-k8s
    variant: disposable-database
  name: postgres-on-k8s-dd
spec:
  ports:
  - name: "5432"
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgres-on-k8s
    variant: disposable-database
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    variant: disposable-database
  name: postgres-on-k8s-job-to-set-up-db-dd
spec:
  template:
    metadata:
      labels:
        variant: disposable-database
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |-
          IFS=$'\n\t'
          set -euxo pipefail

          PGPASSWORD="$POSTGRES_PASSWORD" createuser --echo \
            --username="$POSTGRES_USER" \
            --host="$DB_SERVICE_URL" \
            --port="$DB_SERVICE_PORT" \
            "$CLIENT_USER"

          PGPASSWORD="$POSTGRES_PASSWORD" psql \
            --username="$POSTGRES_USER" \
            --host="$DB_SERVICE_URL" \
            --port="$DB_SERVICE_PORT" \
            --command="
              ALTER USER \"$CLIENT_USER\" WITH PASSWORD '$CLIENT_PASSWORD'
            "

          PGPASSWORD="$POSTGRES_PASSWORD" createdb --echo \
            --username="$POSTGRES_USER" \
            --host="$DB_SERVICE_URL" \
            --port="$DB_SERVICE_PORT" \
            --owner="$CLIENT_USER" \
            my_db

          PGPASSWORD="$CLIENT_PASSWORD" psql \
            --username="$CLIENT_USER" \
            --host="$DB_SERVICE_URL" \
            --port="$DB_SERVICE_PORT" \
            --dbname=my_db \
            --command="
              CREATE TABLE some_table (
                id            SERIAL PRIMARY KEY,
                description   TEXT
              )
            "
        env:
        - name: DB_SERVICE_URL
          value: postgres-on-k8s-dd
        - name: DB_SERVICE_PORT
          value: "5432"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-db-admin-credentials
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-db-admin-credentials
        - name: CLIENT_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-db-client-credentials
        - name: CLIENT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-db-client-credentials
        image: postgres:latest
        name: postgres-on-k8s-job-to-set-up-db
        resources: {}
      restartPolicy: Never
status: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    variant: disposable-database
  name: postgres-on-k8s-job-to-tear-down-db-dd
spec:
  template:
    metadata:
      labels:
        variant: disposable-database
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |-
          IFS=$'\n\t'
          set -euxo pipefail

          PGPASSWORD="$POSTGRES_PASSWORD" dropdb --echo \
            --username="$POSTGRES_USER" \
            --host="$DB_SERVICE_URL" \
            --port="$DB_SERVICE_PORT" \
            my_db

          PGPASSWORD="$POSTGRES_PASSWORD" dropuser --echo \
            --username="$POSTGRES_USER" \
            --host="$DB_SERVICE_URL" \
            --port="$DB_SERVICE_PORT" \
            "$CLIENT_USER"
        env:
        - name: DB_SERVICE_URL
          value: postgres-on-k8s-dd
        - name: DB_SERVICE_PORT
          value: "5432"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-db-admin-credentials
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-db-admin-credentials
        - name: CLIENT_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-db-client-credentials
        - name: CLIENT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-db-client-credentials
        image: postgres:latest
        name: postgres-on-k8s-job-to-tear-down-db
        resources: {}
      restartPolicy: Never
status: {}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    variant: disposable-database
  name: postgres-on-k8s-cronjob-insert-db-dd
spec:
  jobTemplate:
    metadata:
      labels:
        variant: disposable-database
      name: postgres-on-k8s-cronjob-insert-db
    spec:
      template:
        metadata:
          labels:
            variant: disposable-database
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - |-
              IFS=$'\n\t'
              set -euxo pipefail

              for _ in {1..60}
              do
                PGPASSWORD="$CLIENT_PASSWORD" psql \
                  --user="$CLIENT_USER" \
                  --host="$DB_SERVICE_URL" \
                  --port="$DB_SERVICE_PORT" \
                  --dbname=my_db \
                  --command="
                    INSERT INTO some_table (description) VALUES (md5(random()::text))
                  "

                sleep 1
              done
            env:
            - name: DB_SERVICE_URL
              value: postgres-on-k8s-dd
            - name: DB_SERVICE_PORT
              value: "5432"
            - name: CLIENT_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: pg-db-client-credentials
            - name: CLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: pg-db-client-credentials
            image: postgres:latest
            name: postgres-on-k8s-cronjob-insert-db
            resources: {}
          restartPolicy: OnFailure
  schedule: '* * * * *'
status: {}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    variant: disposable-database
  name: postgres-on-k8s-cronjob-copy-to-nginx-dd
spec:
  jobTemplate:
    metadata:
      labels:
        variant: disposable-database
      name: postgres-on-k8s-cronjob-copy-to-nginx
    spec:
      template:
        metadata:
          labels:
            variant: disposable-database
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - |-
              IFS=$'\n\t'
              set -euxo pipefail

              PGPASSWORD="$CLIENT_PASSWORD" psql \
                --user="$CLIENT_USER" \
                --host="$DB_SERVICE_URL" \
                --port="$DB_SERVICE_PORT" \
                --dbname=my_db \
                --output=index.html \
                --html \
                --command="
                  SELECT * FROM some_table
                "

              cp index.html /usr/share/nginx/html
            env:
            - name: DB_SERVICE_URL
              value: postgres-on-k8s-dd
            - name: DB_SERVICE_PORT
              value: "5432"
            - name: CLIENT_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: pg-db-client-credentials
            - name: CLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: pg-db-client-credentials
            image: postgres:latest
            name: postgres-on-k8s-cronjob-copy-to-nginx
            resources: {}
            volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: html-files
          restartPolicy: OnFailure
          volumes:
          - name: html-files
            persistentVolumeClaim:
              claimName: shared-data-persistent-volume-claim
  schedule: '* * * * *'
status: {}
